AWSTemplateFormatVersion: 2010-09-09
Description: Mitjan CloudFormation -testitemplate

Resources:

  VPCstackki:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/mitja-cf-vpc/cf-verkko.template

  mitjabucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: mitja-cf-bucket

  munjono:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: mitjan-jono

  ec2sg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ec2 security group
      GroupName: mitja-cf-ec2-sg
      SecurityGroupIngress:
        - FromPort: 80
          ToPort: 80
          IpProtocol: Tcp
          SourceSecurityGroupId: !Ref lbsg
      Tags:
        - Key: Name
          Value: mitja-cf-ec2-sg
      VpcId: !GetAtt VPCstackki.Outputs.Veepeecee

  lbsg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: lb security group
      GroupName: mitja-cf-lb-sg
      SecurityGroupIngress:
        - FromPort: 80
          ToPort: 80
          IpProtocol: Tcp
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: mitja-cf-lb-sg
      VpcId: !GetAtt VPCstackki.Outputs.Veepeecee

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: mitja-cf-lb
      Scheme: internet-facing
      SecurityGroups:
        - !Ref lbsg
      SubnetMappings:
        - SubnetId: !GetAtt VPCstackki.Outputs.SubnetMitja1
        - SubnetId: !GetAtt VPCstackki.Outputs.SubnetMitja2
        - SubnetId: !GetAtt VPCstackki.Outputs.SubnetMitja3

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ELBTargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  ELBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !GetAtt VPCstackki.Outputs.Veepeecee

  AutoScaling:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: mitja-asg-cf
      LaunchConfigurationName: !Ref LaunchConfig
      MaxSize: 4
      MinSize: 1
      TargetGroupARNs:
        - !Ref ELBTargetGroup
      VPCZoneIdentifier:
        - !GetAtt VPCstackki.Outputs.SubnetMitja1
        - !GetAtt VPCstackki.Outputs.SubnetMitja2
        - !GetAtt VPCstackki.Outputs.SubnetMitja3

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-06ad9296e6cf1e3cf
      InstanceType: t2.micro
      KeyName: mitjanavain-tokyo
      LaunchConfigurationName: mitja-launch-config
      SecurityGroups:
        - !Ref ec2sg
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - - "#!/bin/bash"
              - "amazon-linux-extras install epel"
              - "amazon-linux-extras install nginx1"
              - "systemctl start nginx"

Outputs:
  LoadBalancerDNS:
    Value: !GetAtt LoadBalancer.DNSName

